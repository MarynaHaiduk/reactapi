{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","loading","setLoading","useEffect","getAllData","fetch","then","response","json","catch","error","console","log","columns","key","title","dataIndex","sorter","a","b","name","length","sortDirections","render","text","src","width","dataSource","map","row","char_id","birthday","occupation","img","status","nickname","appearance","portrayed","category","better_call_saul_appearance","className","pagination","pageSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.decf86e4.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport {Table} from 'antd';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\n\nfunction App() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getAllData();\n    }, []);\n\n    const getAllData = () => {\n        fetch('https://breakingbadapi.com/api/characters')\n            .then(response => response.json())\n            .then((json) => setData(json))\n            .then((loading) => setLoading(false))\n            .catch((error) => console.log(error))\n    };\n\n    const columns = [\n\n        {\n            key: \"key\", title: 'char_id', dataIndex: 'key',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"name\", title: 'Name', dataIndex: 'name',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"birthday\", title: 'birthday', dataIndex: 'birthday',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"occupation\", title: 'occupation', dataIndex: 'occupation',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"img\", title: 'img', dataIndex: 'img',\n            render: text => <img src={text} width=\"50px\"></img>,\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"status\", title: 'status', dataIndex: 'status',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"nickname\", title: 'nickname', dataIndex: 'nickname',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"appearance\",\n            title: 'appearance',\n            dataIndex: 'appearance',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"portrayed\",\n            title: 'portrayed',\n            dataIndex: 'portrayed',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"category\",\n            title: 'category',\n            dataIndex: 'category',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        },\n        {\n            key: \"better_call_saul_appearance\",\n            title: 'better_call_saul_appearance',\n            dataIndex: 'better_call_saul_appearance',\n            sorter: (a, b) => a.name.length - b.name.length, sortDirections: ['descend']\n        }\n    ];\n\n    const dataSource = data.map(row => (\n        {\n            key: row.char_id,\n            name: row.name,\n            birthday: row.birthday,\n            occupation: row.occupation,\n            img: row.img,\n            status: row.status,\n            nickname: row.nickname,\n            appearance: row.appearance,\n            portrayed: row.portrayed,\n            category: row.category,\n            better_call_saul_appearance: row.better_call_saul_appearance\n        }\n    ));\n\n    if(data) {\n        return (\n            <div className=\"content\">\n                {\n                    loading && <div>Loading</div>\n                }\n                {\n                    !loading &&\n                    <Table dataSource={dataSource} columns={columns} pagination={{pageSize: 5}}/>\n                }\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"content\">\n                <p>No Data to Display</p>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}